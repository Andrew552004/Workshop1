# -*- coding: utf-8 -*-
"""vehicle catalog.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xe0UtKFTuInkx_YnnKN1_ZKjgDBLM7G3
"""

"""
Description: This code is a representation of an internal platform to define a vehicle catalog.
Author: Andr√©s Felipe Vanegas Bogota
Date: Mar-15th-2024
"""

class Engine:
    """
    This class represents an engine.
    """

    def _init_(self, name: str, Type: str, Power: str, Weight: str):
        """
        Constructor method for the Engine class.

        Parameters:
            name (str): The name of the engine.
            Type (str): The type of the engine.
            Power (str): The power of the engine.
            Weight (str): The weight of the engine.
        """
        # attributes of the class
        self.name = name
        self.Type = Type
        self.Power = Power
        self.Weight = Weight


class Vehicle:
    """
    This class represents a vehicle.
    """

    def _init_(self, Engine: str, Chasis: str, Model: str, Gasc: str, Year: str):
        """
        Constructor method for the Vehicle class.

        Parameters:
            Engine (str): The engine of the vehicle.
            Chasis (str): The chassis of the vehicle.
            Model (str): The model of the vehicle.
            Gasc (str): The gas consumption of the vehicle.
            Year (str): The year of the vehicle.
        """
        # attributes of the class
        self.Engine = Engine
        self.Chasis = Chasis
        self.Model = Model
        self.Gasc = Gasc
        self.Year = Year

    def show_info(self):
        """
        Method to display information about the vehicle.
        """
        print(f"Model: {self.Model}")
        print(f"Year: {self.Year}")
        print(f"Chasis: {self.Chasis}")
        print(f"Gas consume: {self.Gasc}")
        print("Information:")
        print(f"Name: {self.Engine.name}")
        print(f"Type: {self.Engine.Type}")
        print(f"Power: {self.Engine.Power}")
        print(f"Weight: {self.Engine.Weight}")

class Automobile(Vehicle):
    """
    This class represents an automobile vehicle.
    """

    def _init_(self, engine, chasis, model, Gasc, Year):
        """
        Constructor method for the Automobile class.
        """
        super().init(engine, chasis, model, Gasc, Year)

class Truck(Vehicle):
    """
    This class represents a truck vehicle.
    """

    def _init_(self, engine, chasis, model, Gasc, Year):
        """
        Constructor method for the Truck class.
        """
        super().init(engine, chasis, model, Gasc, Year)

class Yacht(Vehicle):
    """
    This class represents a yacht vehicle.
    """

    def _init_(self, engine, chasis, model, Gasc, Year):
        """
        Constructor method for the Yacht class.
        """
        super().init(engine, chasis, model, Gasc, Year)


class Motorcylce(Vehicle):
    """
    This class represents a motorcycle vehicle.
    """

    def _init_(self, engine, chasis, model, Gasc, Year):
        """
        Constructor method for the Motorcycle class.
        """
        super().init(engine, chasis, model, Gasc, Year)